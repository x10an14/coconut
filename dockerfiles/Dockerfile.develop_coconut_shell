# This install is NOT minimal!
#   TODO: Minimize the docker container
FROM alpine:3.4
MAINTAINER x10an14

#  'apk add'
#     on alpine
#=> equivalent of
#  'apt-get install'
#     on debian/ubuntu

# Pre-requisites for development tools & python3
RUN apk add --no-cache \
    musl-dev \
    linux-headers \
    git \
    gcc \
    g++ \
    make

RUN apk add --no-cache \
    python3 \
    python3-dev

# Necessary due to tests run by Coconut's test suite
RUN ln -sf /usr/bin/python3 /usr/bin/python

# Install pip3++
RUN python3 -m ensurepip && \
    rm -r /usr/lib/python*/ensurepip && \
    pip3 install --upgrade pip setuptools && \
    rm -r /root/.cache

# Copy source-code into docker container image
ADD . /usr/coconut
WORKDIR /usr/coconut

# Install Coconut pip requirements
RUN pip3 install --upgrade -e .[dev]

# Remove above two lines,
# and comment in the below one,
# as soon as pre-commit doesn't
# crash the `docker build` cmd
# with shutil.copytree dying on
# symlinks in the alpine filesystem.
#RUN make dev

# Comment/uncomment below line to have
# access to bash in docker container
# (Something you might want if you're
# debugging/messing around)
RUN apk add --no-cache bash

# Open a console with current (source-code)
# version of Coconut
ENTRYPOINT ["python3", "coconut/main.py"]

